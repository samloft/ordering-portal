version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.3-stretch-node-browsers
        enviroment:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_DATABASE: shop
          DB_USERNAME: root
          DB_PASSWORD:
          SESSION_DRIVER: database
          CACHE_DRIVER: file

      - image: circleci/mysql:5.7
        enviroment:
          - MYSQL_ALLOW_EMPTY_PASSWORD=true
          - MYSQL_ROOT_PASSWORD=

    branches:
      only:
        - development

    steps:
      - run:
          name: Install System Dependencies
          command: |
            sudo apt update
            sudo apt install -y zlib1g-dev libsqlite3-dev libpng-dev mysql-client

      - run:
          name: Install PHP Extensions
          command: |
            sudo docker-php-ext-install zip gd pdo_mysql pdo_sqlite

      - run:
          name: Update Composer
          command: sudo composer self-update

      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-

      - run:
          name: Install Composer Dependencies
          command: composer update && composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "composer.json" }}
          paths:
            - vendor

      - restore_cache:
          keys:
            - node-v4-{{ checksum "package.json" }}
            - node-v4-

      - run:
          name: Install NPM
          command: npm install

      - save_cache:
          key: node-v4-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn

      - run:
          name: Create MySQL Database
          command: mysql -h 127.0.0.1 -u root -e "CREATE DATABASE shop;"

      - run:
          name: Migrate Database
          command: php artisan migrate --env=testing --force

      - run:
          name: PHPUnit Tests
          command: ./vendor/bin/phpunit

      - run:
          name: Merge to Staging
          command: fit merge staging
