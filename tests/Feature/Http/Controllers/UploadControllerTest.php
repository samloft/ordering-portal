<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\UploadController
 */
class UploadControllerTest extends TestCase
{
    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->get(route('upload'));

        $response->assertOk();
        $response->assertViewIs('upload.index');
        $response->assertViewHas('config');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->get(route('upload-completed'));

        $response->assertOk();
        $response->assertViewIs('upload.completed');
        $response->assertViewHas('upload');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function validation_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->post(route('upload-validate'), [
            // TODO: send request data
        ]);

        $response->assertOk();
        $response->assertViewIs('upload.validated');
        $response->assertViewHas('product_lines');

        // TODO: perform additional assertions
    }

    // test cases...
}
