<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\OrderTrackingController
 */
class OrderTrackingControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function copy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->get(route('order-tracking.copy-to-basket'));

        $response->assertRedirect(route('basket'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->get(route('order-tracking'));

        $response->assertOk();
        $response->assertViewIs('order-tracking.index');
        $response->assertViewHas('orders');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function invoice_pdf_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->get(route('order-tracking.invoice-pdf', ['order' => $order, 'customer_order' => $customer_order]));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function order_details_p_d_f_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->get(route('order-tracking.pdf', ['order' => $order]));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->get(route('order-tracking.show', ['order' => $order]));

        $response->assertOk();
        $response->assertViewIs('order-tracking.show');
        $response->assertViewHas('order');
        $response->assertViewHas('lines');

        // TODO: perform additional assertions
    }

    // test cases...
}
