<?php

namespace Tests\Feature\Http\Controllers\Cms;

use App\Models\Promotion;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Cms\PromotionController
 */
class PromotionControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $promotion = factory(Promotion::class)->create();
        $user = factory(User::class)->create();

        $response = $this->actingAs($user, 'admin')->delete(route('cms.promotions.update', ['id' => $promotion->id]));

        $response->assertOk();
        $this->assertDeleted($cms);
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $promotion = factory(Promotion::class)->create();
        $user = factory(User::class)->create();

        $response = $this->actingAs($user, 'admin')
            ->patch(route('cms.promotions.update', ['id' => $promotion->id]), [// TODO: send request data
            ]);

        $response->assertOk();
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(User::class)->create();

        $response = $this->actingAs($user, 'admin')->get(route('cms.promotions'));

        $response->assertOk();
        $response->assertViewIs('promotions.index');
        $response->assertViewHas('promotions');
        $response->assertViewHas('buying_groups');
        $response->assertViewHas('price_lists');
        $response->assertViewHas('discount_codes');
        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(User::class)->create();

        $response = $this->actingAs($user, 'admin')->post(route('cms.promotions.store'), [// TODO: send request data
        ]);

        $response->assertOk();
        // TODO: perform additional assertions
    }
    // test cases...
}
